{"ast":null,"code":"var _jsxFileName = \"/Users/vazgenpetrosian/Dev/rickandmorty/rickandmorty/test/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [nameQuery, setNameQuery] = useState('');\n  const [statusQuery, setStatusQuery] = useState('');\n  const [speciesQuery, setSpeciesQuery] = useState('');\n  const [episodeQuery, setEpisodeQuery] = useState('');\n\n  // useEffect(() => {\n\n  //   const fetchData = async () => {\n  //     try {\n  //       const {data} = await axios.get(`https://rickandmortyapi.com/api/character/?name=${query}`)\n  //       setCharacters(data.results)\n  //     } catch(error) {\n  //       console.error(error)\n  //     }\n  //   }\n  //   fetchData()\n  // }, [nameQuery]);\n\n  // useEffect(() => {\n  //   const fetchEpisode = async () => {\n  //     try {\n  //       const {data} = await axios.get(`https://rickandmortyapi.com/api/episode/${episodeQuery}`)\n  //       console.log(data.characters);\n  //       setCharacters(data.characters);\n  //       // const characters = data.results.map((episode) => episode.characters)\n  //       // setCharacters(data.results.characters)\n  //       // console.log(data.results.map((episode) => episode.characters))\n  //     } catch(error) {\n  //       console.error(error)\n  //     }\n  //   }\n  //   fetchEpisode()\n  // }, [episodeQuery]);\n\n  useEffect(() => {\n    const fetchStatus = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(`https://rickandmortyapi.com/api/character/?name=${nameQuery}&status=${statusQuery}&species=${speciesQuery}`);\n        setCharacters(data.results);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchStatus();\n  }, [nameQuery, statusQuery, speciesQuery]);\n  const episodeCharacters = characters.episode.find(e => e.id == {\n    episodeQuery\n  }.episode[0].match(/\\d+/)[0]).name;\n  console.log(episodeCharacters);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        type: \"text\",\n        placeholder: \"name\",\n        value: nameQuery,\n        className: 'searchInput',\n        onChange: e => setNameQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"status\",\n        name: \"status\",\n        value: statusQuery,\n        onChange: e => setStatusQuery(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"alive\",\n          children: \"\\u0416\\u0438\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dead\",\n          children: \"\\u041C\\u0435\\u0440\\u0442\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"species\",\n        name: \"species\",\n        value: speciesQuery,\n        onChange: e => setSpeciesQuery(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Human\",\n          children: \"\\u0427\\u0435\\u043B\\u043E\\u0432\\u0435\\u043A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Alien\",\n          children: \"\\u0418\\u043D\\u043E\\u043F\\u043B\\u0430\\u043D\\u0435\\u0442\\u044F\\u043D\\u0438\\u043D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"episode\",\n        type: \"text\",\n        placeholder: \"episode\",\n        value: episodeQuery,\n        className: 'searchInput',\n        onChange: e => setEpisodeQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: characters.map(character => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: character.image,\n          alt: character.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), character.name, character.episode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1E6nsA4TXDzSnYt0Z70woTCi4tU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","characters","setCharacters","nameQuery","setNameQuery","statusQuery","setStatusQuery","speciesQuery","setSpeciesQuery","episodeQuery","setEpisodeQuery","fetchStatus","data","get","results","error","console","episodeCharacters","episode","find","e","id","match","name","log","className","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","map","character","src","image","alt","_c","$RefreshReg$"],"sources":["/Users/vazgenpetrosian/Dev/rickandmorty/rickandmorty/test/src/App.js"],"sourcesContent":["import {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport './App.css';\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n  const [nameQuery, setNameQuery] = useState('');\n  const [statusQuery, setStatusQuery] = useState('');\n  const [speciesQuery, setSpeciesQuery] = useState('');\n  const [episodeQuery, setEpisodeQuery] = useState('');\n\n  // useEffect(() => {\n\n  //   const fetchData = async () => {\n  //     try {\n  //       const {data} = await axios.get(`https://rickandmortyapi.com/api/character/?name=${query}`)\n  //       setCharacters(data.results)\n  //     } catch(error) {\n  //       console.error(error)\n  //     }\n  //   }\n  //   fetchData()\n  // }, [nameQuery]);\n\n  // useEffect(() => {\n  //   const fetchEpisode = async () => {\n  //     try {\n  //       const {data} = await axios.get(`https://rickandmortyapi.com/api/episode/${episodeQuery}`)\n  //       console.log(data.characters);\n  //       setCharacters(data.characters);\n  //       // const characters = data.results.map((episode) => episode.characters)\n  //       // setCharacters(data.results.characters)\n  //       // console.log(data.results.map((episode) => episode.characters))\n  //     } catch(error) {\n  //       console.error(error)\n  //     }\n  //   }\n  //   fetchEpisode()\n  // }, [episodeQuery]);\n\n  useEffect (() => {\n    const fetchStatus = async () => {\n      try {\n        const {data} = await axios.get (`https://rickandmortyapi.com/api/character/?name=${nameQuery}&status=${statusQuery}&species=${speciesQuery}`)\n        setCharacters(data.results)\n      } catch(error) {\n        console.error(error)\n      }\n    }\n    fetchStatus()\n  }, [nameQuery, statusQuery, speciesQuery]);\n\nconst episodeCharacters = characters.episode.find(e => e.id == {episodeQuery}.episode[0].match(/\\d+/)[0]).name;\nconsole.log(episodeCharacters);\n\n  return (\n    <div className=\"App\">\n      <div className='searchbar'>\n        <input \n        name='name'\n        type='text'\n        placeholder={\"name\"} \n        value={nameQuery}\n        className={'searchInput'}\n        onChange={(e) => setNameQuery(e.target.value)}/>\n        <select id=\"status\" name=\"status\" value={statusQuery} onChange={(e) => setStatusQuery(e.target.value)}>\n        <option value=\"alive\">Жив</option>\n        <option value=\"dead\">Мертв</option>\n        </select>\n      <select id=\"species\" name=\"species\" value={speciesQuery} onChange={(e) => setSpeciesQuery(e.target.value)}>\n        <option value=\"Human\">Человек</option>\n        <option value=\"Alien\">Инопланетянин</option>\n      </select>\n      <input \n        name='episode'\n        type='text'\n        placeholder={\"episode\"} \n        value={episodeQuery}\n        className={'searchInput'}\n        onChange={(e) => setEpisodeQuery(e.target.value)}/>\n      </div>\n      <div className='results'>\n        {characters.map(character => (\n          <div>\n            <img src={character.image} alt={character.name}></img>\n            {character.name}\n            {character.episode}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}