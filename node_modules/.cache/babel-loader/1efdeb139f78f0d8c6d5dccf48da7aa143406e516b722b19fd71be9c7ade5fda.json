{"ast":null,"code":"var _jsxFileName = \"/Users/vazgenpetrosian/Dev/rickandmorty/rickandmorty/test/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [nameQuery, setNameQuery] = useState('');\n  const [statusQuery, setStatusQuery] = useState('');\n  const [speciesQuery, setSpeciesQuery] = useState('');\n  const [episodeQuery, setEpisodeQuery] = useState('');\n  useEffect(() => {\n    const fetchEpisode = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(`https://rickandmortyapi.com/api/episode/${episodeQuery}`);\n        const episodeCharacters = data.characters;\n        console.log(episodeCharacters);\n        episodeCharacters.forEach(item => {\n          const slicedCharacters = item.slice(42);\n          console.log(slicedCharacters);\n        });\n        const {\n          dataCharacters\n        } = await axios.get(`https://rickandmortyapi.com/api/character/${slicedCharacters}`);\n        setCharacters(data.characters);\n        // setCharacters(data.characters);\n        // const characters = data.results.map((episode) => episode.characters)\n        // setCharacters(data.results.characters)\n        // console.log(data.results.map((episode) => episode.characters))\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchEpisode();\n  }, [episodeQuery]);\n  useEffect(() => {\n    const fetchStatus = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(`https://rickandmortyapi.com/api/character/?name=${nameQuery}&status=${statusQuery}&species=${speciesQuery}`);\n        setCharacters(data.results);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchStatus();\n  }, [nameQuery, statusQuery, speciesQuery]);\n\n  // useEffect (() => {\n  //   const fetchEpisode = async () => {\n  //     try {\n  //       const [episodeData] = await axios.get (`https://rickandmortyapi.com/api/episode/${episodeQuery}`)\n  //       console.log(episodeData)\n  //     } catch(error) {\n  //       console.error(error)\n  //     }\n  //   }\n  //   fetchEpisode()\n  // }, [episodeQuery]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        type: \"text\",\n        placeholder: \"name\",\n        value: nameQuery,\n        className: 'searchInput',\n        onChange: e => setNameQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"status\",\n        name: \"status\",\n        value: statusQuery,\n        onChange: e => setStatusQuery(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"alive\",\n          children: \"\\u0416\\u0438\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dead\",\n          children: \"\\u041C\\u0435\\u0440\\u0442\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"species\",\n        name: \"species\",\n        value: speciesQuery,\n        onChange: e => setSpeciesQuery(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Human\",\n          children: \"\\u0427\\u0435\\u043B\\u043E\\u0432\\u0435\\u043A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Alien\",\n          children: \"\\u0418\\u043D\\u043E\\u043F\\u043B\\u0430\\u043D\\u0435\\u0442\\u044F\\u043D\\u0438\\u043D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"episode\",\n        type: \"text\",\n        placeholder: \"episode\",\n        value: episodeQuery,\n        className: 'searchInput',\n        onChange: e => {\n          setEpisodeQuery(e.target.value);\n          console.log(episodeQuery);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: characters.map(character => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: character.image,\n          alt: character.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), character.name, /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MuSIbEQaWWr475Ux/goJyJcz2Fs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","characters","setCharacters","nameQuery","setNameQuery","statusQuery","setStatusQuery","speciesQuery","setSpeciesQuery","episodeQuery","setEpisodeQuery","fetchEpisode","data","get","episodeCharacters","console","log","forEach","item","slicedCharacters","slice","dataCharacters","error","fetchStatus","results","className","children","name","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","id","map","character","src","image","alt","_c","$RefreshReg$"],"sources":["/Users/vazgenpetrosian/Dev/rickandmorty/rickandmorty/test/src/App.js"],"sourcesContent":["import {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport './App.css';\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n  const [nameQuery, setNameQuery] = useState('');\n  const [statusQuery, setStatusQuery] = useState('');\n  const [speciesQuery, setSpeciesQuery] = useState('');\n  const [episodeQuery, setEpisodeQuery] = useState('');\n\n\n\n  useEffect(() => {\n    const fetchEpisode = async () => {\n      try {\n        const {data} = await axios.get(`https://rickandmortyapi.com/api/episode/${episodeQuery}`)\n        const episodeCharacters = data.characters;\n        console.log(episodeCharacters);\n        episodeCharacters.forEach((item) => {\n        const slicedCharacters = item.slice(42);\n        console.log(slicedCharacters);\n       });\n\n        const {dataCharacters} = await axios.get(`https://rickandmortyapi.com/api/character/${slicedCharacters}`)\n        setCharacters(data.characters);\n        // setCharacters(data.characters);\n        // const characters = data.results.map((episode) => episode.characters)\n        // setCharacters(data.results.characters)\n        // console.log(data.results.map((episode) => episode.characters))\n      } catch(error) {\n        console.error(error)\n      }\n    }\n    fetchEpisode()\n  }, [episodeQuery]);\n\n  useEffect (() => {\n    const fetchStatus = async () => {\n      try {\n        const {data} = await axios.get (`https://rickandmortyapi.com/api/character/?name=${nameQuery}&status=${statusQuery}&species=${speciesQuery}`)\n        setCharacters(data.results)\n      } catch(error) {\n        console.error(error)\n      }\n    }\n    fetchStatus()\n  }, [nameQuery, statusQuery, speciesQuery]);\n  \n  // useEffect (() => {\n  //   const fetchEpisode = async () => {\n  //     try {\n  //       const [episodeData] = await axios.get (`https://rickandmortyapi.com/api/episode/${episodeQuery}`)\n  //       console.log(episodeData)\n  //     } catch(error) {\n  //       console.error(error)\n  //     }\n  //   }\n  //   fetchEpisode()\n  // }, [episodeQuery]);\n\n\n  return (\n    <div className=\"App\">\n      <div className='searchbar'>\n        <input \n        name='name'\n        type='text'\n        placeholder={\"name\"} \n        value={nameQuery}\n        className={'searchInput'}\n        onChange={(e) => setNameQuery(e.target.value)}/>\n        <select id=\"status\" name=\"status\" value={statusQuery} onChange={(e) => setStatusQuery(e.target.value)}>\n        <option value=\"alive\">Жив</option>\n        <option value=\"dead\">Мертв</option>\n        </select>\n      <select id=\"species\" name=\"species\" value={speciesQuery} onChange={(e) => setSpeciesQuery(e.target.value)}>\n        <option value=\"Human\">Человек</option>\n        <option value=\"Alien\">Инопланетянин</option>\n      </select>\n      <input \n        name='episode'\n        type='text'\n        placeholder={\"episode\"} \n        value={episodeQuery}\n        className={'searchInput'}\n        onChange={(e) => {\n          setEpisodeQuery(e.target.value) \n          console.log(episodeQuery)}\n        }/>\n      </div>\n      <div className='results'>\n        {characters.map(character => (\n          <div>\n            <img src={character.image} alt={character.name}></img>\n            {character.name}\n            <span></span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}