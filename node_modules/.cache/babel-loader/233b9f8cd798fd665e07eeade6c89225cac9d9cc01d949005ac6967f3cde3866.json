{"ast":null,"code":"var _jsxFileName = \"/Users/vazgenpetrosian/Dev/rickandmorty/rickandmorty/test/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [nameQuery, setNameQuery] = useState('');\n  const [statusQuery, setStatusQuery] = useState('');\n  const [speciesQuery, setSpeciesQuery] = useState('');\n  const [episodeQuery, setEpisodeQuery] = useState('');\n  useEffect(() => {\n    const fetchEpisode = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(`https://rickandmortyapi.com/api/episode/${episodeQuery}`);\n        console.log(data.characters);\n        // const episodeCharacters = data.characters;\n        const id = data.characters.map(item => {\n          const charactersId = item.slice(42);\n          return charactersId;\n        });\n        console.log(id);\n        function sliceIntoChunks(arr, chunkSize) {\n          const res = [];\n          for (let i = 0; i < arr.length; i += chunkSize) {\n            const chunk = arr.slice(i, i + chunkSize);\n            res.push(chunk);\n          }\n          return res;\n        }\n        const tryId = sliceIntoChunks(id, 1);\n        console.log(tryId);\n        tryId.forEach(element => {\n          axios.get(`https://rickandmortyapi.com/api/character/${element}`);\n          return dataCharacter;\n        });\n        // const {dataCharacters} = await axios.get(`https://rickandmortyapi.com/api/character/${tryId}`)\n        // console.log(dataCharacters);\n        // setCharacters(dataCharacters.results);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchEpisode();\n  }, [episodeQuery]);\n\n  // useEffect (() => {\n  //   const fetchStatus = async () => {\n  //     try {\n  //       const {data} = await axios.get (`https://rickandmortyapi.com/api/character/?name=${nameQuery}&status=${statusQuery}&species=${speciesQuery}`)\n  //       setCharacters(data.results)\n  //     } catch(error) {\n  //       console.error(error)\n  //     }\n  //   }\n  //   fetchStatus()\n  // }, [nameQuery, statusQuery, speciesQuery]);\n\n  // useEffect (() => {\n  //   const fetchEpisode = async () => {\n  //     try {\n  //       const [episodeData] = await axios.get (`https://rickandmortyapi.com/api/episode/${episodeQuery}`)\n  //       console.log(episodeData)\n  //     } catch(error) {\n  //       console.error(error)\n  //     }\n  //   }\n  //   fetchEpisode()\n  // }, [episodeQuery]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        type: \"text\",\n        placeholder: \"name\",\n        value: nameQuery,\n        className: 'searchInput',\n        onChange: e => setNameQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"status\",\n        name: \"status\",\n        value: statusQuery,\n        onChange: e => setStatusQuery(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"alive\",\n          children: \"\\u0416\\u0438\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dead\",\n          children: \"\\u041C\\u0435\\u0440\\u0442\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"species\",\n        name: \"species\",\n        value: speciesQuery,\n        onChange: e => setSpeciesQuery(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Human\",\n          children: \"\\u0427\\u0435\\u043B\\u043E\\u0432\\u0435\\u043A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Alien\",\n          children: \"\\u0418\\u043D\\u043E\\u043F\\u043B\\u0430\\u043D\\u0435\\u0442\\u044F\\u043D\\u0438\\u043D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"episode\",\n        type: \"text\",\n        placeholder: \"episode\",\n        value: episodeQuery,\n        className: 'searchInput',\n        onChange: e => {\n          setEpisodeQuery(e.target.value);\n          console.log(episodeQuery);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: characters.map(character => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: character.image,\n          alt: character.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), character.name, /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1E6nsA4TXDzSnYt0Z70woTCi4tU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","characters","setCharacters","nameQuery","setNameQuery","statusQuery","setStatusQuery","speciesQuery","setSpeciesQuery","episodeQuery","setEpisodeQuery","fetchEpisode","data","get","console","log","id","map","item","charactersId","slice","sliceIntoChunks","arr","chunkSize","res","i","length","chunk","push","tryId","forEach","element","dataCharacter","error","className","children","name","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","character","src","image","alt","_c","$RefreshReg$"],"sources":["/Users/vazgenpetrosian/Dev/rickandmorty/rickandmorty/test/src/App.js"],"sourcesContent":["import {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport './App.css';\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n  const [nameQuery, setNameQuery] = useState('');\n  const [statusQuery, setStatusQuery] = useState('');\n  const [speciesQuery, setSpeciesQuery] = useState('');\n  const [episodeQuery, setEpisodeQuery] = useState('');\n\n\n\n  useEffect(() => {\n    const fetchEpisode = async () => {\n      try {\n      const {data} = await axios.get(`https://rickandmortyapi.com/api/episode/${episodeQuery}`)\n      console.log(data.characters);\n      // const episodeCharacters = data.characters;\n      const id = data.characters.map((item) => {\n      const charactersId = item.slice(42);\n        return charactersId;\n       });\n       console.log(id);\n\n\n       function sliceIntoChunks(arr, chunkSize) {\n        const res = [];\n        for (let i = 0; i < arr.length; i += chunkSize) {\n            const chunk = arr.slice(i, i + chunkSize);\n            res.push(chunk);\n        }\n        return res;\n    }\n      const tryId = sliceIntoChunks(id, 1);\n      console.log(tryId);\n      tryId.forEach(element => {\n        axios.get(`https://rickandmortyapi.com/api/character/${element}`)\n        return dataCharacter;\n      });\n      // const {dataCharacters} = await axios.get(`https://rickandmortyapi.com/api/character/${tryId}`)\n      // console.log(dataCharacters);\n      // setCharacters(dataCharacters.results);\n      } catch(error) {\n        console.error(error)\n      }\n    }\n    fetchEpisode()\n  }, [episodeQuery]);\n\n  // useEffect (() => {\n  //   const fetchStatus = async () => {\n  //     try {\n  //       const {data} = await axios.get (`https://rickandmortyapi.com/api/character/?name=${nameQuery}&status=${statusQuery}&species=${speciesQuery}`)\n  //       setCharacters(data.results)\n  //     } catch(error) {\n  //       console.error(error)\n  //     }\n  //   }\n  //   fetchStatus()\n  // }, [nameQuery, statusQuery, speciesQuery]);\n  \n  // useEffect (() => {\n  //   const fetchEpisode = async () => {\n  //     try {\n  //       const [episodeData] = await axios.get (`https://rickandmortyapi.com/api/episode/${episodeQuery}`)\n  //       console.log(episodeData)\n  //     } catch(error) {\n  //       console.error(error)\n  //     }\n  //   }\n  //   fetchEpisode()\n  // }, [episodeQuery]);\n\n\n  return (\n    <div className=\"App\">\n      <div className='searchbar'>\n        <input \n        name='name'\n        type='text'\n        placeholder={\"name\"} \n        value={nameQuery}\n        className={'searchInput'}\n        onChange={(e) => setNameQuery(e.target.value)}/>\n        <select id=\"status\" name=\"status\" value={statusQuery} onChange={(e) => setStatusQuery(e.target.value)}>\n        <option value=\"alive\">Жив</option>\n        <option value=\"dead\">Мертв</option>\n        </select>\n      <select id=\"species\" name=\"species\" value={speciesQuery} onChange={(e) => setSpeciesQuery(e.target.value)}>\n        <option value=\"Human\">Человек</option>\n        <option value=\"Alien\">Инопланетянин</option>\n      </select>\n      <input \n        name='episode'\n        type='text'\n        placeholder={\"episode\"} \n        value={episodeQuery}\n        className={'searchInput'}\n        onChange={(e) => {\n          setEpisodeQuery(e.target.value) \n          console.log(episodeQuery)}\n        }/>\n      </div>\n      <div className='results'>\n        {characters.map(character => (\n          <div>\n            <img src={character.image} alt={character.name}></img>\n            {character.name}\n            <span></span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}