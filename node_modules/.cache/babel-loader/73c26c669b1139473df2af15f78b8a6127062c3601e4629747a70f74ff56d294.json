{"ast":null,"code":"var _jsxFileName = \"/Users/vazgenpetrosian/Dev/rickandmorty/rickandmorty/test/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [nameQuery, setNameQuery] = useState('');\n  const [statusQuery, setStatusQuery] = useState('');\n  const [speciesQuery, setSpeciesQuery] = useState('');\n\n  // useEffect(() => {\n  //   const fetchEpisode = async () => {\n  //     try {\n  //     const {data} = await axios.get(`https://rickandmortyapi.com/api/episode/${episodeQuery}`)\n  //     console.log(data.characters);\n  //     // const episodeCharacters = data.characters;\n  //     const id = data.characters.map((item) => {\n  //     const charactersId = item.slice(42);\n  //       return charactersId;\n  //      });\n  //      console.log(id);\n\n  //      function sliceIntoChunks(arr, chunkSize) {\n  //       const res = [];\n  //       for (let i = 0; i < arr.length; i += chunkSize) {\n  //           const chunk = arr.slice(i, i + chunkSize);\n  //           res.push(chunk);\n  //       }\n  //       return res;\n  //   }\n  //     const tryId = sliceIntoChunks(id, 1);\n  //     console.log(tryId);\n  //     const {dataCharacters} = await axios.get(`https://rickandmortyapi.com/api/character/${tryId}`)\n  //     // console.log(dataCharacters);\n  //     setCharacters(dataCharacters);\n  //     } catch(error) {\n  //       console.error(error)\n  //     }\n  //   }\n  //   fetchEpisode()\n  // }, [episodeQuery]);\n\n  useEffect(() => {\n    const fetchStatus = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(`https://rickandmortyapi.com/api/character/?name=${nameQuery}&status=${statusQuery}&species=${speciesQuery}`);\n        setCharacters(data.results);\n      } catch (error) {\n        alert('Такого существа нет!');\n      }\n    };\n    fetchStatus();\n  }, [nameQuery, statusQuery, speciesQuery]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-white text-center m-8\",\n      children: \"\\u0412\\u0441\\u0435\\u043B\\u0435\\u043D\\u043D\\u0430\\u044F \\u0420\\u0438\\u043A \\u0438 \\u041C\\u043E\\u0440\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        type: \"text\",\n        placeholder: \"Name\",\n        value: nameQuery,\n        className: \"h8 w-1/4 p-0 border-solid rounded-md bg-slate-950 text-white\",\n        onChange: e => setNameQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"select__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"statusInput\",\n          id: \"status\",\n          name: \"status\",\n          value: statusQuery,\n          onChange: e => setStatusQuery(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"alive\",\n            children: \"\\u0416\\u0438\\u0432\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"dead\",\n            children: \"\\u041C\\u0435\\u0440\\u0442\\u0432\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"species\",\n          className: \"speciesInput\",\n          name: \"species\",\n          value: speciesQuery,\n          onChange: e => setSpeciesQuery(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Human\",\n            children: \"\\u0427\\u0435\\u043B\\u043E\\u0432\\u0435\\u043A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Alien\",\n            children: \"\\u0418\\u043D\\u043E\\u043F\\u043B\\u0430\\u043D\\u0435\\u0442\\u044F\\u043D\\u0438\\u043D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"results__title\",\n        children: \"\\u041D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card__container\",\n        children: characters.map(character => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"card__image\",\n            src: character.image,\n            alt: character.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card__name\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"span\",\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 39\n            }, this), \" \", character.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card__species\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"span\",\n              children: \"Species:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 42\n            }, this), \" \", character.species]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1/wrZOSmopT60gj+3R41juSawWY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","characters","setCharacters","nameQuery","setNameQuery","statusQuery","setStatusQuery","speciesQuery","setSpeciesQuery","fetchStatus","data","get","results","error","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","type","placeholder","value","onChange","e","target","id","map","character","src","image","alt","species","_c","$RefreshReg$"],"sources":["/Users/vazgenpetrosian/Dev/rickandmorty/rickandmorty/test/src/App.js"],"sourcesContent":["import {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport './App.css';\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n  const [nameQuery, setNameQuery] = useState('');\n  const [statusQuery, setStatusQuery] = useState('');\n  const [speciesQuery, setSpeciesQuery] = useState('');\n\n\n  // useEffect(() => {\n  //   const fetchEpisode = async () => {\n  //     try {\n  //     const {data} = await axios.get(`https://rickandmortyapi.com/api/episode/${episodeQuery}`)\n  //     console.log(data.characters);\n  //     // const episodeCharacters = data.characters;\n  //     const id = data.characters.map((item) => {\n  //     const charactersId = item.slice(42);\n  //       return charactersId;\n  //      });\n  //      console.log(id);\n\n\n  //      function sliceIntoChunks(arr, chunkSize) {\n  //       const res = [];\n  //       for (let i = 0; i < arr.length; i += chunkSize) {\n  //           const chunk = arr.slice(i, i + chunkSize);\n  //           res.push(chunk);\n  //       }\n  //       return res;\n  //   }\n  //     const tryId = sliceIntoChunks(id, 1);\n  //     console.log(tryId);\n  //     const {dataCharacters} = await axios.get(`https://rickandmortyapi.com/api/character/${tryId}`)\n  //     // console.log(dataCharacters);\n  //     setCharacters(dataCharacters);\n  //     } catch(error) {\n  //       console.error(error)\n  //     }\n  //   }\n  //   fetchEpisode()\n  // }, [episodeQuery]);\n\n  useEffect (() => {\n    const fetchStatus = async () => {\n      try {\n        const {data} = await axios.get (`https://rickandmortyapi.com/api/character/?name=${nameQuery}&status=${statusQuery}&species=${speciesQuery}`)\n        setCharacters(data.results)\n      } catch(error) {\n        alert('Такого существа нет!')\n      }\n    }\n    fetchStatus()\n  }, [nameQuery, statusQuery, speciesQuery]);\n  \n\n\n  return (\n    <div className=\"App\">\n      <h1 className='text-white text-center m-8'>Вселенная Рик и Морти</h1>\n      <div className='flex items-center flex-col'>\n        <input \n        name='name'\n        type='text'\n        placeholder=\"Name\" \n        value={nameQuery}\n        className='h8 w-1/4 p-0 border-solid rounded-md bg-slate-950 text-white'\n        onChange={(e) => setNameQuery(e.target.value)}/>\n        <div className='select__container'>\n          <select  className='statusInput'id=\"status\" name=\"status\" value={statusQuery} onChange={(e) => setStatusQuery(e.target.value)}>\n        <option value=\"alive\">Жив</option>\n        <option value=\"dead\">Мертв</option>\n        </select>\n      <select id=\"species\"  className='speciesInput' name=\"species\" value={speciesQuery} onChange={(e) => setSpeciesQuery(e.target.value)}>\n        <option value=\"Human\">Человек</option>\n        <option value=\"Alien\">Инопланетянин</option>\n        </select>\n        </div>\n\n      </div>\n      <div className='results__container'>\n        <h2 className='results__title'>Найдено</h2>\n        <div className='card__container'>\n            {characters.map(character => (\n          <div className='card'>\n            <img className='card__image' src={character.image} alt={character.name}></img>\n            <p className='card__name'><span className='span'>Name:</span> {character.name}</p>\n            <p className='card__species'><span className='span'>Species:</span> {character.species}</p>\n          </div>\n        ))} \n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAGpD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAD,SAAS,CAAE,MAAM;IACf,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAM;UAACC;QAAI,CAAC,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAE,mDAAmDR,SAAS,WAAWE,WAAW,YAAYE,YAAY,EAAE,CAAC;QAC7IL,aAAa,CAACQ,IAAI,CAACE,OAAO,CAAC;MAC7B,CAAC,CAAC,OAAMC,KAAK,EAAE;QACbC,KAAK,CAAC,sBAAsB,CAAC;MAC/B;IACF,CAAC;IACDL,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACN,SAAS,EAAEE,WAAW,EAAEE,YAAY,CAAC,CAAC;EAI1C,oBACET,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlB,OAAA;MAAIiB,SAAS,EAAC,4BAA4B;MAAAC,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrEtB,OAAA;MAAKiB,SAAS,EAAC,4BAA4B;MAAAC,QAAA,gBACzClB,OAAA;QACAuB,IAAI,EAAC,MAAM;QACXC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,MAAM;QAClBC,KAAK,EAAErB,SAAU;QACjBY,SAAS,EAAC,8DAA8D;QACxEU,QAAQ,EAAGC,CAAC,IAAKtB,YAAY,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAChDtB,OAAA;QAAKiB,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChClB,OAAA;UAASiB,SAAS,EAAC,aAAa;UAAAa,EAAE,EAAC,QAAQ;UAACP,IAAI,EAAC,QAAQ;UAACG,KAAK,EAAEnB,WAAY;UAACoB,QAAQ,EAAGC,CAAC,IAAKpB,cAAc,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAR,QAAA,gBAChIlB,OAAA;YAAQ0B,KAAK,EAAC,OAAO;YAAAR,QAAA,EAAC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAClCtB,OAAA;YAAQ0B,KAAK,EAAC,MAAM;YAAAR,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC,eACXtB,OAAA;UAAQ8B,EAAE,EAAC,SAAS;UAAEb,SAAS,EAAC,cAAc;UAACM,IAAI,EAAC,SAAS;UAACG,KAAK,EAAEjB,YAAa;UAACkB,QAAQ,EAAGC,CAAC,IAAKlB,eAAe,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAR,QAAA,gBAClIlB,OAAA;YAAQ0B,KAAK,EAAC,OAAO;YAAAR,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtCtB,OAAA;YAAQ0B,KAAK,EAAC,OAAO;YAAAR,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH,CAAC,eACNtB,OAAA;MAAKiB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjClB,OAAA;QAAIiB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3CtB,OAAA;QAAKiB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC3Bf,UAAU,CAAC4B,GAAG,CAACC,SAAS,iBAC3BhC,OAAA;UAAKiB,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBlB,OAAA;YAAKiB,SAAS,EAAC,aAAa;YAACgB,GAAG,EAAED,SAAS,CAACE,KAAM;YAACC,GAAG,EAAEH,SAAS,CAACT;UAAK;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC9EtB,OAAA;YAAGiB,SAAS,EAAC,YAAY;YAAAC,QAAA,gBAAClB,OAAA;cAAMiB,SAAS,EAAC,MAAM;cAAAC,QAAA,EAAC;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,KAAC,EAACU,SAAS,CAACT,IAAI;UAAA;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClFtB,OAAA;YAAGiB,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAAClB,OAAA;cAAMiB,SAAS,EAAC,MAAM;cAAAC,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,KAAC,EAACU,SAAS,CAACI,OAAO;UAAA;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxF,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpB,EAAA,CA5FQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AA8FZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}